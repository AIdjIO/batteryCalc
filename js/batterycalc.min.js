function wheel_radius(){let e=document.getElementById("edit-wheel-radius"),t=e.options[e.selectedIndex].text,[o,l,r]=t.split(/[\/,R]/),a=(100*+l/+o+ +r/2)/1e3;return a}export function getData(){let e=document.querySelector('textarea[name="Vehicle_Speed"]'),t=e.value.replace(/(^\s*,)|(,\s*$)/g,"").split(",").map(e=>parseFloat(e)/3.6),o=[...Array(t.length).keys()];return[o,t]}export function cycleDistance(e){return e.reduce((e,t)=>e+t,0)||0}export function calculateSpeedInfo(e){let t=document.getElementById("speed_info"),o=e.map((t,o)=>(e[o+1]||0)-t),l=o.filter(e=>e>0),r=l.reduce((e,t)=>e+t,0)/l.length,a=o.filter(e=>e<0),i=a.reduce((e,t)=>e+t,0)/a.length,n=cycleDistance(e),c=n/e.length;t.innerHTML=`<i>This drive cycle has a minimum speed of ${(3.6*Math.min(...e)).toFixed(2)||0} km/h, \n                                 a maximum speed of ${(3.6*Math.max(...e)).toFixed(2)||0} km/h,\n                                 an average speed of ${(3.6*c).toFixed(2)||0} km/h, an average acceleration of ${r} m/s², \n                                 an average deceleration of ${i.toFixed(3)||0} m/s²and \n                                 a total distance of ${(n/1e3).toFixed(2)||0} km</i>`}export function acceleration(e){return e.map((t,o)=>t-(e[o-1]||e[o]))}export function total_forces(e){const t=9.81;let o=document.getElementById("edit-vehicle-mass").value,l=document.getElementById("edit-drag-coefficient").value,r=document.getElementById("edit-frontal-area").value,a=document.getElementById("edit-rolling-resistance").value,i=document.getElementById("edit-air-density").value,n=document.getElementById("edit-road-slope").value*Math.PI/180,c=e.map((c,s)=>o*(c-(e[s-1]||e[s])+t*a*Math.cos(n)+t*Math.sin(n))+.5*i*l*r*c*c);return c}export function wheel_torque(e){let t=wheel_radius();return total_forces(e).map(e=>e*t)}export function motorTrqDmnd(e){let t=document.getElementById("edit-drive-ratio-differential").value,o=document.getElementById("edit-drive-ratio-gear").value;return wheel_torque(e).map(e=>e/t/o)}export function total_cycle_power(e){let t=cycleDistance(e)/1e3,o=document.getElementById("edit-ancillary-energy").value/1e3,l=o*t/(e.length/3600);return total_forces(e).map((t,o)=>t*e[o]/1e3+l)}export function totalMotorPower(e){if("peak"==e){let e=document.querySelectorAll("[data-drupal-selector='edit-front-motor-power-peak']")[0],t=document.querySelectorAll("[data-drupal-selector='edit-rear-motor-power-peak']")[0];return(e?+e.value:0)+(t?+t.value:0)}let t=document.querySelectorAll("[data-drupal-selector='edit-front-motor-power-continuous']")[0],o=document.querySelectorAll("[data-drupal-selector='edit-rear-motor-power-continuous']")[0];return(t?+t.value:0)+(o?+o.value:0)}export function motorPwrActual(e,t="peak"){let o=total_cycle_power(e),l=totalMotorPower(t),r=document.getElementById("edit-powertrain-efficiency").value,a=document.getElementById("edit-regen-capacity").value;return o.map(e=>e/r>=l?l:e/r<-l*a/100?-l*a/100:e/r)}export function voltageArchitecture(){return document.getElementById("edit-voltage-architecture-0").checked?400:800}export function SOC(e,t){let o=1e3*document.getElementById("edit-pack-size").value,l=voltageArchitecture(),r=o/l,a=currentActual(e,t),i=100;return a.map(e=>i=Math.min(i,100)-100*e/r/3600)}export function currentActual(e,t){let o=motorPwrActual(e,t),l=voltageArchitecture(),r=packResistance(packSP())/1e3;return o.map(e=>(l-Math.sqrt(l*l-4*r*e*1e3))/2/r)}export function packSP(){let e=1e3*parseFloat(document.getElementById("edit-pack-size").value)||0,t=parseFloat(document.querySelector('input[data-drupal-selector = "edit-cell-voltage-nom"]').value)||0,o=parseFloat(document.querySelector('input[data-drupal-selector = "edit-cell-capacity"]').value)||0,l=voltageArchitecture(),r=Math.ceil(l/t),a=Math.ceil(e/l/o);return[r,a]}export function packResistance(e){let t=parseFloat(document.querySelector('input[data-drupal-selector = "edit-cell-tab-resistance"]').value),o=parseFloat(document.querySelector('input[data-drupal-selector = "edit-cell-internal-resistance"]').value),l=parseFloat(document.querySelector('input[data-drupal-selector = "edit-ee-internal-resistance"]').value),[r,a]=[...e],i=(t+o)*r/a+l;return i}export function cycle_energy(e,t="cont",o,l){let r=o?l:0,a=motorPwrActual(e,t),i=0;return a.map((i=0,e=>i+=e/3600*(1*(e>0||o&&!!r))*(r/100*(e<0)||1)))}export function plotPowerLimit(e,t,o){let l=document.getElementById(e).data;if(l.map(e=>e.name).indexOf("Max Power Lim "+t)>-1)return;if(l.map(e=>e.name).indexOf("Min Power Lim "+t)>-1)return;let r=totalMotorPower(t);Plotly.addTraces(e,{name:"Max Power Lim "+t,type:"scatter",showlegend:!1,x:o.labels,y:o.labels.map(e=>r),hovertemplate:"%{x:f}s<br>%{y:.2f}<i>kW</i>",mode:"lines",xaxis:"x",yaxis:"y2",line:{color:"rgb(0, 0, 0)",shape:"linear",width:1,dash:"dash"},fill:"cont"==t?"tozeroy":"tonexty",fillcolor:"cont"==t?"#95cf9599":"#ffbf8699"}),Plotly.addTraces(e,{name:"Min Power Lim "+t,type:"scatter",showlegend:!1,x:o.labels,y:o.labels.map(e=>-r),mode:"lines",xaxis:"x",yaxis:"y2",line:{color:"rgb(0, 0, 0)",shape:"linear",width:1,dash:"dash"},fill:"cont"==t?"tozeroy":"tonexty",fillcolor:"cont"==t?"#95cf9599":"#ffbf8699"})}export function plotTrace(e,t,o){let l=document.getElementById(e).data,r=document.getElementById("edit-useable-capacity");if(l.map(e=>e.name).indexOf(t.traceName)>-1)return;let a=t.dataCallback(o.speeds,t.curr,"on"==t.regen,r);Plotly.addTraces(e,{name:t.traceName,type:"scatter",x:o.labels,y:a,xaxis:t.xaxis,yaxis:t.yaxis,hovertemplate:t.hovertemplate,mode:"lines",line:{color:t.line.color,shape:"spline",smoothing:1.3,width:1},marker:t.marker,visible:t.visible,fill:t.fill,fillColor:t.fillColor})}export function getCellDimensions(){let e=+document.getElementById("edit-height").value||0,t=+document.getElementById("edit-width").value||0,o=+document.getElementById("edit-depth").value||0,l=+document.querySelector('input[type="hidden"][data-drupal-selector="edit-diameter"]').value||0;return[e,t,o,l]}export function getCellMass(){return+document.getElementById("edit-cell-mass").value}export function packMass(e){let[t,o]=[...e];return t*o*getCellMass()*.001}export function packVolume(e){let[t,o]=[...e],[l,r,a,i]=[...getCellDimensions()],n=0!==r?r*l*a:Math.PI*i*i*l/4;return n=t*o*n*1e-6,n}export function calculateBatteryPackSpec(e){let[t,o]=[...e],l=document.getElementById("edit-cell-voltage-nom").value,r=document.getElementById("edit-cell-capacity").value,a=document.getElementById("edit-c-rate").value,i=Number.parseFloat(Math.ceil(o*r)).toFixed(),n=Number.parseFloat(Math.ceil(t*l*i/1e3)).toFixed(),c=document.getElementById("packParameters"),s=Number.parseFloat(packResistance(e)).toFixed(3),d=Number.parseFloat(packVolume(e)).toFixed(),m=Number.parseFloat(packMass(e)).toFixed(),u=document.getElementById("cell_table"),p=[[...[...u.querySelectorAll("th")].filter((e,t)=>0!=t).map(e=>e.innerText.toUpperCase())],[...[...u.querySelectorAll("input[type=radio]:checked")[0].closest("tr").querySelectorAll("td")].filter((e,t)=>0!=t).map(e=>e.innerHTML)]],[y]=p,f=y.map((e,t)=>p.map(e=>e[t])),g=("\n"+JSON.stringify(f)).replace(/("],)/gm,"</p>\n").replace(/[\["\]+]/gm,"").replace(/,/gm,": ").replace(/\n/gm,'<p class="card-text m-0">')+"</p>";c.innerHTML=`\n    <div class="row">\n  <div class="col-6">\n            <div class="card">\n            <h5 class="card-header text-center mt-0 fs-4 fw-bold">Cell Specification</h5>\n                <div class="card-body">                \n                ${g}\n                </div>\n            </div>\n            </div>\n            <div class="col-6">\n            <div class="card">\n            <h5 class="card-header text-center mt-0 fs-4 fw-bold">Battery Pack Specification</h5>\n            <div class="card-body">\n            <p class="card-text m-0">Pack capacity: ${i} Ah</p>\n            <p class="card-text m-0">Pack energy: ${n} kWh</p>\n            <p class="card-text m-0">Pack S/P (series/parallel): ${t}/${o}</p>\n            <p class="card-text m-0">Number of cells in the pack: ${t*o}</p>\n            <p class="card-text m-0">Pack resistance: ${s} mOhm</p>\n            <p class="card-text m-0">Pack mass: ${m} kg (cells only)</p>\n            <p class="card-text m-0">Pack volume: ${d} L (cells only)</p>\n            <p class="card-text m-0">The current draw at ${a} C is ${a*i} A</p>\n            <p class="card-text m-0">The power delivered at ${a} C is ${a*n} kW</p>\n            </div>\n        </div>\n        </div>\n        </div>\n`}export function calculateBatteryPackSize(e){let t=document.getElementById("edit-vehicle-range").value,o=document.getElementById("edit-useable-capacity").value,l=document.getElementById("edit-ancillary-energy").value,r=document.getElementById("edit-powertrain-efficiency").value,a=document.getElementById("edit-regen-capacity").value,i=cycle_energy(e,"peak",!0,a),n=document.getElementById("edit-cycle-select").value,c=(1e3*i.slice(-1)[0]/(cycleDistance(e)/1e3)+l)/r,s=1e3/c/1.609,d=t/1.609,m=c*t/(o/100)/1e3;document.getElementById("results").innerHTML=`<p class="lead">The energy requirement of this\n                             vehicle is ${c.toFixed(1)}Wh/km or ${s.toFixed(2)}mi/kWh.\n                            To achieve a range of ${t}km or ${d.toFixed(0)}miles on \n                            ${n} cycle this vehicle requires a battery of \n                            ${m.toFixed(1)}kWh \n                            if ${o}% of the battery capacity is useable.<p>`,document.getElementById("edit-pack-size").value=m}export function updatePlotly(){console.info("Updating...");let e={};[e.labels,e.speeds]=[...getData()];let t=document.getElementsByClassName("js-plotly-plot"),o=e.speeds.length/2;if(t)for(let e of t)Plotly.purge(e);let l=totalMotorPower("peak"),r=totalMotorPower("cont"),a={layout_cycle_preview:{title:"Speed Profile",showlegend:!1,height:450,xaxis:{domain:[0,1],title:"time [s]",tickmode:"linear",tick0:0,dtick:500,anchor:"y",showspikes:!0,rangeslider:{}},yaxis:{title:"speed [km/h]",tickmode:"linear",tick0:0,dtick:20,titlefont:{color:"black"},tickfont:{color:"#black"},anchor:"x",showspikes:!0},autosize:!0,automargin:!1,paper_bgcolor:"#fcf2d7",plot_bgcolor:"#faebd7",modebar:{add:["v1hovermode","hoverclosest","hovercompare","togglehover","togglespikelines"]}},layout_vehicle:{title:"Vehicle Power and Energy",xaxis:{rangemode:"tozero",zeroline:!0,showline:!0,domain:[0,1],title:{text:"time [s]",standoff:0},tickmode:"linear",mirror:"ticks",tick0:0,dtick:500,nticks:4,ticks:"inside",ticklen:10,tickcolor:"black",minor:{ticks:"inside",ticklen:6,tickcolor:"black"},anchor:"y",showspikes:!0},yaxis:{title:"Speed [km/h]",domain:[.52,1],tickmode:"linear",tick0:0,dtick:20,titlefont:{color:"black"},tickfont:{color:"#black"},anchor:"x",showspikes:!0},autosize:!0,automargin:!1,paper_bgcolor:"#fcf2d7",plot_bgcolor:"#faebd7",modebar:{add:["v1hovermode","hoverclosest","hovercompare","togglehover","togglespikelines"]},xaxis2:{title:"time [s]",showline:!0,tick0:0,dtick:500,nticks:4,ticks:"inside",ticklen:10,tickcolor:"black",minor:{ticks:"inside",ticklen:6,tickcolor:"black"},anchor:"y2",domain:[0,1],showspikes:!0},yaxis2:{title:"Power [kW]",titlefont:{color:"rgb(148, 103, 189)"},tickfont:{color:"rgb(148, 103, 189)"},anchor:"x",side:"left",domain:[0,.48],showspikes:!0},yaxis3:{title:"Energy [kWh]",titlefont:{color:"#d62728"},tickfont:{color:"#d62728"},anchor:"x",overlaying:"y",side:"right",position:1},yaxis4:{title:"Motor_Torque [Nm]",titlefont:{color:"rgb(55, 128, 191)"},tickfont:{color:"rgb(55, 128, 191)"},anchor:"x",overlaying:"y2",side:"right",domain:[0,.48],position:1},showlegend:!0,height:860,legend:{x:0,y:1.05,yanchor:"top",xanchor:"left",orientation:"h",traceorder:"reversed",font:{family:"sans-serif",size:12,color:"#000"},bgcolor:"#E2E2E2",yref:"paper"},colorway:["red","green","blue","goldenrod","magenta"],annotations:[{x:o,y:l-5,xref:"x",yref:"y2",text:"Max Motor Peak Power",showarrow:!1},{x:o,y:5-l,xref:"x",yref:"y2",text:"Min Motor Peak Power",showarrow:!1},{x:o,y:r+5,xref:"x",yref:"y2",text:"Max Motor Continuous Power",showarrow:!1},{x:o,y:-r-5,xref:"x",yref:"y2",text:"Min Motor Continuous Power",showarrow:!1}]},layout_battery:{title:"Battery Electrical Loads",xaxis:{title:{domain:[0,.85],text:"time [s]",standoff:5},tickmode:"linear",tick0:0,dtick:500,anchor:"y",showspikes:!0},yaxis:{title:"Speed [km/h]",domain:[.5,1],tickmode:"linear",tick0:0,dtick:20,titlefont:{color:"black"},tickfont:{color:"#black"},anchor:"x",showspikes:!0},autosize:!0,automargin:!1,paper_bgcolor:"#fcf2d7",plot_bgcolor:"#faebd7",modebar:{add:["v1hovermode","hoverclosest","hovercompare","togglehover","togglespikelines"]},xaxis2:{domain:[0,.85],title:"time [s]",anchor:"y2",categoryorder:"array",showspikes:!0},yaxis2:{title:"Power [kW]",titlefont:{color:"rgb(148, 103, 189)"},tickfont:{color:"rgb(148, 103, 189)"},anchor:"x",side:"left",domain:[0,.48],showspikes:!0},yaxis3:{title:"Energy [kWh]",titlefont:{color:"#d62728"},tickfont:{color:"#d62728"},anchor:"x",overlaying:"y",side:"right",position:1},yaxis4:{title:"Current [A]",titlefont:{color:"blue"},tickfont:{color:"blue"},anchor:"free",overlaying:"y2",side:"left",domain:[0,.48],position:0},yaxis5:{title:"SOC [%]",titlefont:{color:"rgb(55, 128, 191)"},tickfont:{color:"rgb(55, 128, 191)"},anchor:"free",overlaying:"y",side:"right",position:.9},height:860,showlegend:!0,legend:{y:1.05,yanchor:"top",xanchor:"left",orientation:"h",traceorder:"reversed",font:{family:"sans-serif",size:12,color:"#000"},bgcolor:"#E2E2E2"},colorway:["red","green","blue","goldenrod","magenta"]}};calculateSpeedInfo(e.speeds),calculateBatteryPackSize(e.speeds),calculateBatteryPackSpec(packSP());const i={x:e.labels,y:e.speeds.map(e=>3.6*e),hovertemplate:"%{x:d}s<br>%{y:.1f}<i>km/h</i>",name:"Speed",type:"scatter",mode:"lines",line:{color:"black",shape:"linear",width:1}},n=JSON.parse(JSON.stringify(i));n.mode="lines+markers",n.marker={},n.marker.size=3,n.marker.color=e.speeds,n.legendgroup="group2";let c={width:512,height:512,path:"M512 512v-208l-80 80-96-96-48 48 96 96-80 80z M512 0h-208l80 80-96 96 48 48 96-96 80 80z M0 512h208l-80-80 96-96-48-48-96 96-80-80z M0 0v208l80-80 96 96 48-48-96-96 80-80z"};const s={scrollZoom:!0,responsive:!0,editable:!1,modeBarButtonsToAdd:[{name:"Fullscreen",icon:c,click:function(e){e.classList.toggle("fullscreen"),Plotly.relayout(e,{autosize:!0})}}]};let d={speedPlotPreview:{traces:[n],layout:a.layout_cycle_preview},speedPlotPackSize:{traces:[i],layout:a.layout_vehicle},speedPlotPackSpec:{traces:[i],layout:a.layout_battery}};Object.keys(d).forEach(e=>{Plotly.newPlot(e,d[e].traces,d[e].layout,s)});let m={speedPlotPackSize:["EnergyRegenOn","EnergyRegenOff","PowerDemand","MotorTorqueDmnd","MotorPower"],speedPlotPackSpec:["SOC","Current","EnergyWithoutRegen","EnergyWithRegen"]},u={EnergyRegenOn:{traceName:"Energy Regen On",curr:"peak",dataCallback:cycle_energy,xaxis:"x",yaxis:"y3",hovertemplate:"%{x:f}s<br>%{y:.2f}<i>kWh</i>",line:{color:"green"},marker:{mode:"",size:"",color:""},visible:!0,regen:"on",fill:"",fillColor:""},EnergyRegenOff:{traceName:"Energy Regen Off",curr:"peak",dataCallback:cycle_energy,xaxis:"x",yaxis:"y3",hovertemplate:"%{x:f}s<br>%{y:.2f}<i>kWh</i>",line:{color:"red"},marker:{mode:"",size:0,color:""},visible:!0,regen:"off",fill:"",fillColor:""},EnergyWithRegen:{traceName:"Energy w/ Regen",curr:"peak",data:e,dataCallback:cycle_energy,xaxis:"x",yaxis:"y3",hovertemplate:"%{x:f}s<br>%{y:.2f}<i>kWh</i>",line:{color:"green"},marker:{mode:"",size:0,color:"green"},visible:!0,regen:"on",fill:"",fillColor:""},EnergyWithoutRegen:{traceName:"Energy w/o Regen",curr:"peak",dataCallback:cycle_energy,xaxis:"x",yaxis:"y3",hovertemplate:"%{x:f}s<br>%{y:.2f}<i>kWh</i>",line:{color:"red"},marker:{mode:"",size:0,color:"red"},visible:!0,regen:"off",fill:"",fillColor:""},MotorPower:{traceName:"Motor Power",curr:"peak",dataCallback:motorPwrActual,showlegend:!1,xaxis:"x",yaxis:"y2",hovertemplate:"%{x:f}s<br>%{y:.2f}<i>kW</i>",line:{color:""},marker:{mode:"",size:0,color:""},visible:!0,regen:null,fill:"",fillColor:""},MaxPwrLimPeak:{traceName:"Max Power Limit Peak",curr:"peak",dataCallback:totalMotorPower,showlegend:!1,xaxis:"x",yaxis:"y2",line:{color:"rgb(0, 0, 0)"},marker:{mode:"",size:0,color:""},visible:!0,regen:null,fill:"cont"==this.type?"tozeroy":"tonexty",fillColor:"cont"==this.type?"#95CF95":"#FFBF86"},MinPwrLimPeak:{traceName:"Min Power Limit Peak",curr:"peak",dataCallback:totalMotorPower,xaxis:"x",yaxis:"y2",line:{color:"rgb(0, 0, 0)"},marker:{mode:"",size:0,color:""},visible:"legendonly",regen:null,fill:"cont"==this.curr?"tozeroy":"tonexty",fillColor:"cont"==this.curr?"#95CF95":"#FFBF86"},MaxPwrLimCont:{traceName:"Max Power Limit Continuous",curr:"cont",dataCallback:totalMotorPower,showlegend:!1,xaxis:"x",yaxis:"y2",line:{color:"rgb(0, 0, 0)"},marker:{mode:"",size:0,color:""},visible:"legendonly",regen:null,fill:"cont"==this.type?"tozeroy":"tonexty",fillColor:"cont"==this.type?"#95CF95":"#FFBF86"},MinPwrLimCont:{traceName:"Min Power Limit Continuous",curr:"cont",dataCallback:totalMotorPower,xaxis:"x",yaxis:"y2",line:{color:"9467bd"},marker:{mode:"lines+markers",size:3,color:"#9467bd"},visible:"legendonly",regen:null,fill:"cont"==this.curr?"tozeroy":"tonexty",fillColor:"cont"==this.curr?"#95CF95":"#FFBF86"},MotorTorqueDmnd:{traceName:"Motor Torque Dmnd",curr:null,dataCallback:motorTrqDmnd,xaxis:"x",yaxis:"y4",hovertemplate:"%{x:f}s<br>%{y:.2f}<i>Nm</i>",line:{color:"rgb(55, 128, 191)"},marker:{mode:"lines+markers",size:3,color:"#9467bd"},visible:"legendonly",regen:null,fill:"",fillColor:""},PowerDemand:{traceName:"Power Demand",curr:null,dataCallback:total_cycle_power,xaxis:"x",yaxis:"y2",hovertemplate:"%{x:f}s<br>%{y:.2f}<i>kW</i>",line:{color:"#9467bd"},marker:{mode:"lines+markers",size:3,color:"#9467bd"},visible:!0,regen:null,fill:"",fillColor:""},SOC:{traceName:"SOC",curr:null,dataCallback:SOC,xaxis:"x",yaxis:"y5",hovertemplate:"%{x:f}s<br>%{y:.2f}<i>%</i>",line:{color:"rgb(55, 128, 191)"},marker:{mode:"",size:0,color:""},visible:!0,regen:null,fill:"",fillColor:""},Current:{traceName:"Current",curr:"peak",dataCallback:currentActual,xaxis:"x",yaxis:"y4",hovertemplate:"%{x}s<br>%{y:.2f}<i>A</i>",line:{color:"blue"},marker:{mode:"",size:0,color:""},visible:!0,regen:null,fill:"",fillColor:""}};plotPowerLimit("speedPlotPackSize","peak",e),plotPowerLimit("speedPlotPackSize","cont",e),Object.keys(m).forEach(t=>{m[t].forEach(o=>{plotTrace(t,u[o],e)})})}